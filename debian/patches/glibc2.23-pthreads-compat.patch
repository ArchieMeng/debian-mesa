Description: fix misuse of pthread_barrier API
 If we are not spawning any threads, it's incorrect to call
 pthread_barrier_init() with a count of zero.  Guard the use of
 pipe_barrier_* so that we don't make API violating calls (SIGFPE on
 x86 with glibc 2.23 and above).
Author: Steve Langasek <steve.langasek@ubuntu.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1559842

Index: mesa-11.1.2/src/gallium/drivers/llvmpipe/lp_rast.c
===================================================================
--- mesa-11.1.2.orig/src/gallium/drivers/llvmpipe/lp_rast.c
+++ mesa-11.1.2/src/gallium/drivers/llvmpipe/lp_rast.c
@@ -819,7 +819,8 @@
       /* Wait for all threads to get here so that threads[1+] don't
        * get a null rast->curr_scene pointer.
        */
-      pipe_barrier_wait( &rast->barrier );
+      if (rast->num_threads > 0)
+         pipe_barrier_wait( &rast->barrier );
 
       /* do work */
       if (debug)
@@ -829,7 +830,8 @@
                       rast->curr_scene);
       
       /* wait for all threads to finish with this scene */
-      pipe_barrier_wait( &rast->barrier );
+      if (rast->num_threads > 0)
+         pipe_barrier_wait( &rast->barrier );
 
       /* XXX: shouldn't be necessary:
        */
@@ -910,7 +912,8 @@
    create_rast_threads(rast);
 
    /* for synchronizing rasterization threads */
-   pipe_barrier_init( &rast->barrier, rast->num_threads );
+   if (num_threads > 0)
+      pipe_barrier_init( &rast->barrier, rast->num_threads );
 
    memset(lp_dummy_tile, 0, sizeof lp_dummy_tile);
 
@@ -967,7 +970,8 @@
    }
 
    /* for synchronizing rasterization threads */
-   pipe_barrier_destroy( &rast->barrier );
+   if (rast->num_threads > 0)
+      pipe_barrier_destroy( &rast->barrier );
 
    lp_scene_queue_destroy(rast->full_scenes);
 
