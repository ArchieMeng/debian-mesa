#!/usr/bin/make -f
# debian/rules for the Debian mesa package
# Copyright Â© 2006 Thierry Reding <thierry@gilfi.de>

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Wall -g
ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
endif

DEB_BUILD_ARCH     ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEB_HOST_ARCH     ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS     ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU)
DEB_BUILD_DIR      ?= $(CURDIR)/build
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
        confflags += --build=$(DEB_HOST_GNU_TYPE)
else
        confflags += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif

# choose which configurations to build
include debian/scripts/choose-configs

# build the following configurations by default
CONFIGS = $(SWX11_GLU_CONFIGS) \
	  dri \
	  osmesa \
	  osmesa-static \
	  osmesa16 \
	  osmesa16-static \
	  osmesa32 \
	  osmesa32-static

STAMP_DIR = debian/stamp
STAMP = $(STAMP_DIR)/$(DEB_BUILD_GNU_TYPE)
BUILD_STAMPS = $(addprefix $(STAMP)-build-, $(CONFIGS))

QUILT_STAMPFN = $(STAMP_DIR)/patch
include /usr/share/quilt/quilt.make

confflags-common = \
	--disable-glu \
	--disable-glut \
	--disable-glw \
	CFLAGS="$(CFLAGS)"

DRI_DRIVERS = swrast
GALLIUM_DRIVERS = swrast
EGL_DISPLAYS = x11

# hurd doesn't do direct rendering
ifeq ($(DEB_HOST_ARCH_OS), hurd)
	DIRECT_RENDERING = --disable-driglx-direct
else
	DIRECT_RENDERING = --enable-driglx-direct

  ifeq ($(DEB_HOST_ARCH_OS), linux)
# Gallium drivers require libdrm-{nouveau,radeon}, only available on Linux
	GALLIUM_DRIVERS += nouveau radeon
# Although the KMS egl drivers will probably build on kfreebsd & hurd
# only linux actually has KMS drivers implemented at this point.
	EGL_DISPLAYS += kms
  endif

  ifeq ($(DEB_HOST_ARCH), lpia)
	DRI_DRIVERS += i915 i965
	GALLIUM_DRIVERS += intel
  else ifneq ($(DEB_HOST_ARCH), s390)
	DRI_DRIVERS += mga r128 r200 r300 r600 radeon savage tdfx
    ifeq ($(DEB_HOST_ARCH_CPU), i386)
	DRI_DRIVERS += i810 i915 i965 sis unichrome
	GALLIUM_DRIVERS += intel
    else ifeq ($(DEB_HOST_ARCH_CPU), amd64)
	DRI_DRIVERS += i915 i965 sis unichrome
	GALLIUM_DRIVERS += intel
    endif
  endif
endif

ifeq ($(HAVE_KMS), yes)
	EGL_DISPLAYS += kms
endif

confflags-dri = \
	--with-driver=dri \
	--with-dri-drivers="$(DRI_DRIVERS)" \
	--with-demos=xdemos \
	--with-dri-driverdir=/usr/lib/dri \
	--with-egl-displays="$(EGL_DISPLAYS)" \
	--enable-glx-tls \
	$(addprefix --enable-gallium-,$(GALLIUM_DRIVERS)) \
	--with-state-trackers=egl,es,glx,dri,vega \
	$(DIRECT_RENDERING) \
	$(confflags-common)

confflags-osmesa = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--with-demos= \
	$(confflags-common)

confflags-osmesa-static = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--enable-static \
	--with-demos= \
	$(confflags-common)

confflags-osmesa16 = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--with-osmesa-bits=16 \
	--with-demos= \
	$(confflags-common)

confflags-osmesa16-static = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--with-osmesa-bits=16 \
	--enable-static \
	--with-demos= \
	$(confflags-common)

confflags-osmesa32 = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--with-osmesa-bits=32 \
	--with-demos= \
	$(confflags-common)

confflags-osmesa32-static = \
	--disable-egl \
	--disable-gallium \
	--with-driver=osmesa \
	--with-osmesa-bits=32 \
	--enable-static \
	--with-demos= \
	$(confflags-common)

confflags-swx11+glu = \
	--disable-egl \
	--disable-gallium \
	--with-driver=xlib \
	--disable-gl-osmesa \
	--with-demos= \
	--disable-egl \
	--disable-glut \
	--disable-glw \
	CFLAGS="$(CFLAGS)"

confflags-swx11+glu-static = \
	--disable-egl \
	--disable-gallium \
	--with-driver=xlib \
	--disable-gl-osmesa \
	--enable-static \
	--with-demos= \
	--disable-egl \
	--disable-glut \
	--disable-glw \
	CFLAGS="$(CFLAGS)"

confflags-swx11+glu-i386-i686 = \
	--disable-egl \
	--disable-gallium \
	--with-driver=xlib \
	--disable-gl-osmesa \
	--with-demos= \
	--disable-glut \
	--disable-egl \
	--disable-glw \
	--libdir=/usr/lib/i686/cmov \
	CFLAGS="$(CFLAGS) -march=i686"

# Add /usr/lib32/dri/ on 32 bit systems so that this path is used
# for 32 bit compatibility on 64 bit systems
ifeq ($(DEB_BUILD_ARCH),i386)
	confflags-dri += --with-dri-searchpath=/usr/lib/dri:/usr/lib32/dri
endif

configure: $(QUILT_STAMPFN) configure.ac
	autoreconf -vfi

# list the configurations that will built
configs:
	@echo Building the following configurations: $(CONFIGS)

$(STAMP_DIR)/stamp:
	dh_testdir
	mkdir -p $(STAMP_DIR)
	>$@

$(QUILT_STAMPFN): $(STAMP_DIR)/stamp

build: $(BUILD_STAMPS)

$(STAMP)-build-%: configure
	dh_testdir

	mkdir -p $(DEB_BUILD_DIR)/$*
	find $(CURDIR)/* -maxdepth 0 -not -path '$(DEB_BUILD_DIR)*' | \
		xargs cp -rlf -t $(DEB_BUILD_DIR)/$*
	cd $(DEB_BUILD_DIR)/$* && \
	../../configure --prefix=/usr --mandir=\$${prefix}/share/man \
	             --infodir=\$${prefix}/share/info --sysconfdir=/etc \
	             --localstatedir=/var $(confflags) $(confflags-$*)
	cd $(DEB_BUILD_DIR)/$* && $(MAKE)

	touch $@

install: build
	# Add here commands to install the package into debian/tmp
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	set -e; for config in $(filter-out dri, $(CONFIGS)); do \
		$(MAKE) -C $(DEB_BUILD_DIR)/$$config DESTDIR=$(CURDIR)/debian/tmp install; \
	done
	$(MAKE) -C $(DEB_BUILD_DIR)/dri DESTDIR=$(CURDIR)/debian/tmp/dri install

clean: unpatch
	dh_testdir
	dh_testroot
	rm -rf .pc
	
	rm -f config.cache config.log config.status
	rm -f */config.cache */config.log */config.status
	rm -f conftest* */conftest*
	rm -rf autom4te.cache */autom4te.cache
	rm -rf build
	rm -rf configure config.guess config.sub config.h.in
	rm -rf $$(find -name Makefile.in)
	rm -rf aclocal.m4 missing depcomp install-sh ltmain.sh
	rm -rf $(STAMP_DIR)
	
	dh_clean

# Build architecture-independent files here.
binary-indep: install


# Build architecture-dependent files here.
binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs -s -XChangeLog
	dh_installchangelogs -pmesa-common-dev ChangeLog
	dh_installdocs -s
	dh_installexamples -s

	# Classic DRI and Gallium DRI are mixed up together here
	# Remove the whole tree to avoid false-positives in --list-missing, and
	# install the right files manually.
	rm -r debian/tmp/dri/usr/lib/dri

ifeq ($(findstring radeon, $(GALLIUM_DRIVERS)), radeon)
	# Radeon searches for r{200,300,600}_dri only, but the gallium driver
	# is (at the moment) radeong_dri.  Rename it to r300_dri, as it
	# fails to support r600.
	# We don't actually install radeong yet, although it will probably
	# replace r300 classic soon.
	mv build/dri/lib/gallium/radeong_dri.so \
		build/dri/lib/gallium/r300_dri.so
endif
ifeq ($(findstring intel, $(GALLIUM_DRIVERS)), intel)
	# Intel i965 Gallium appears to do nothing more than generate GPU 
	# lockups.  Kill it with fire.  i915 is apparently useful.
	rm build/dri/lib/gallium/i965_dri.so
	rm debian/tmp/dri/usr/lib/egl/egl_*_i965.so
endif

	dh_install -s --list-missing

	# Create an ld.so.conf which says where to find libGL from Mesa
	echo "/usr/lib/mesa" \
	> $(CURDIR)/debian/libgl1-mesa-glx/usr/lib/mesa/ld.so.conf
	echo "/usr/lib/mesa" \
	> $(CURDIR)/debian/libgl1-mesa-swx11/usr/lib/mesa/ld.so.conf

ifeq ($(DEB_BUILD_ARCH),amd64)
	# Add the path to 32bit libGL from Mesa (on 64 bit)
	echo "/usr/lib32/mesa" \
	>> $(CURDIR)/debian/libgl1-mesa-glx/usr/lib/mesa/ld.so.conf
	echo "/usr/lib32/mesa" \
	>> $(CURDIR)/debian/libgl1-mesa-swx11/usr/lib/mesa/ld.so.conf
endif

	# Empty directory for the alternative
	mkdir -p $(CURDIR)/debian/libgl1-mesa-glx/usr/lib/xorg/x11-extra-modules
	mkdir -p $(CURDIR)/debian/libgl1-mesa-swx11/usr/lib/xorg/x11-extra-modules

	dh_installman -s
	dh_lintian -s
	dh_link -s
	dh_strip -plibgl1-mesa-swx11 --dbg-package=libgl1-mesa-swx11-dbg
	dh_strip -plibgl1-mesa-glx --dbg-package=libgl1-mesa-glx-dbg
	dh_strip -plibgl1-mesa-dri --dbg-package=libgl1-mesa-dri-dbg
# Mesa 7.8 doesn't build a gallium swrast DRI driver
# This is built in git, and will be built in 7.9
ifneq ($(filter-out swrast, $(GALLIUM_DRIVERS)), )
	dh_strip -plibgl1-mesa-dri-experimental --dbg-package=libgl1-mesa-dri-experimental-dbg
endif
	dh_strip -plibopenvg1-mesa --dbg-package=libopenvg1-mesa-dbg
	dh_strip -plibegl1-mesa --dbg-package=libegl1-mesa-dbg
	dh_strip -plibgles1-mesa --dbg-package=libgles1-mesa-dbg
	dh_strip -plibgles2-mesa --dbg-package=libgles2-mesa-dbg	
	dh_strip -plibegl1-mesa-drivers-x11 --dbg-package=libegl1-mesa-drivers-x11-dbg
ifeq ($(findstring kms, $(EGL_DISPLAYS)), kms)
	dh_strip -plibegl1-mesa-drivers-kms --dbg-package=libegl1-mesa-drivers-kms-dbg
endif
	dh_strip -s --remaining-packages
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s -l/usr/lib/mesa
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s -- -Zlzma

binary: binary-indep binary-arch


VERSION = $(shell dpkg-parsechangelog | grep ^Vers | cut -d" " -f2)
UPVERSION = $(shell echo $(VERSION) | sed 's,-.*,,') 
TARBALL = $(shell echo mesa_$(UPVERSION).orig.tar.gz | tr -d ' ')
DEMOS_SOURCE = $(shell echo MesaDemos-$(UPVERSION).tar.gz | tr -d ' ')
LIBS_SOURCE = $(shell echo MesaLib-$(UPVERSION).tar.gz | tr -d ' ')

$(DEMOS_SOURCE) $(LIBS_SOURCE):
	uscan --download --destdir $(CURDIR) \
	      --no-symlink --force-download --download-version $(UPVERSION)

$(TARBALL): $(DEMOS_SOURCE) $(LIBS_SOURCE)
	tar xzf $(DEMOS_SOURCE)
	tar xzf $(LIBS_SOURCE)
	mv Mesa-$(UPVERSION) mesa-$(UPVERSION)
	tar czf $(TARBALL) mesa-$(UPVERSION)	

get-orig-source: $(TARBALL)
	rm -r mesa-$(UPVERSION)
	rm $(DEMOS_SOURCE)
	rm $(LIBS_SOURCE)


.PHONY: configs build clean binary-indep binary-arch binary install get-orig-source
